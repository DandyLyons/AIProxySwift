//
//  BlackForestLabsFluxProRequestBody_v1_1.swift
//  AIProxy
//
//  Created by Lou Zell on 1/8/25.
//

/// Requests body for Black Forest Lab's Pro 1.1 model:
/// https://api.bfl.ml/scalar#tag/tasks/POST/v1/flux-pro-1.1
public struct BlackForestLabsFluxProRequestBody_v1_1: Encodable {
    // Required

    // TODO: ORder these

    /// Text prompt for image generation
    public let prompt: String?


    /// Base64 encoded image to use with Flux Redux.
    public let imagePrompt: String?


    /// Aspect ratio of the image between 21:9 and 9:21
    /// default: 16:9
    public let aspectRatio: String?

    /// Height of the generated image in text-to-image mode. Only used when
    /// aspect_ratio=custom. Must be a multiple of 16 (if it's not, it will be rounded to
    /// nearest multiple of 16). Note: Ignored in img2img and inpainting modes.
    ///
    /// Minimum 256
    /// Maximum 1440
    ///

    /// Height of the generated image in pixels. Must be a multiple of 32.
    /// min: 256
    /// max: 1440
    /// default: 768
    public let height: Int?

    /// Output format for the generated image. Can be 'jpeg' or 'png'.
    public let outputFormat: OutputFormat?

    /// Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
    /// default: false
    public let promptUpsampling: Bool?

    /// Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
    /// min: 0
    /// max: 6
    /// default: 2
    public let safetyTolerance: Int?

    /// Seed for reproducibility.
    /// Example: 42
    public let seed: Int?

    /// Width of the generated image in pixels. Must be a multiple of 32.
    /// min: 256
    /// max: 1440
    /// default: 1024
    public let width: Int?

    private enum CodingKeys: String, CodingKey {
        case aspectRatio = "aspect_ratio"
        case height
        case outputFormat = "output_format"
        case prompt
        case promptUpsampling = "prompt_upsampling"
        case safetyTolerance = "safety_tolerance"
        case seed
        case width
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(
        prompt: String? = nil,
        imagePrompt: String? = nil,
        aspectRatio: String? = nil,
        height: Int? = nil,
        outputFormat: BlackForestLabsFluxProRequestBody_v1_1.OutputFormat? = nil,
        promptUpsampling: Bool? = nil,
        safetyTolerance: Int? = nil,
        seed: Int? = nil,
        width: Int? = nil
    ) {
        self.prompt = prompt
        self.imagePrompt = imagePrompt
        self.aspectRatio = aspectRatio
        self.height = height
        self.outputFormat = outputFormat
        self.promptUpsampling = promptUpsampling
        self.safetyTolerance = safetyTolerance
        self.seed = seed
        self.width = width
    }
}

// MARK: - RequestBody.OutputFormat
extension BlackForestLabsFluxProRequestBody_v1_1 {
    public enum OutputFormat: String, Encodable {
        case jpg
        case png
    }
}
